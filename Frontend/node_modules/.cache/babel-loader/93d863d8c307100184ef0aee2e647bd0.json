{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ckdqj\\\\OneDrive\\\\\\uBB38\\uC11C\\\\Go\\\\Hands-On-Full-Stack-Development-with-Go-master\\\\first-react-tutorial\\\\Frontend\\\\src\\\\CreditCards.js\";\nimport React from 'react';\nimport { injectStripe, StripeProvider, Elements, CardElement } from 'react-stripe-elements';\nimport Cookies from 'js-cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst INITIALSTATE = \"INITIAL\",\n      SUCCESSSTATE = \"COMPLETE\",\n      FAILEDSTATE = \"FAILED\";\n\nclass CreditCardForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      status: INITIALSTATE,\n      useExisting: false\n    };\n  }\n\n  renderCreditCardInformation() {\n    const user = Cookies.getJSON('user');\n    const style = {\n      base: {\n        'fontSize': '20px',\n        'color': '#495057',\n        'fontFamily': 'apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif'\n      }\n    };\n\n    const usersavedcard = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn  btn-outline-success text-center mx-auto\",\n          onClick: () => this.setState({\n            useExisting: true\n          }),\n          children: \"Use saved card?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 31\n    }, this);\n\n    let remembercardcheck = null;\n\n    if (user.loggedin === true) {\n      remembercardcheck = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row form-check text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"form-check-input\",\n          type: \"checkbox\",\n          value: \"\",\n          id: \"remembercardcheck\",\n          name: \"remember\",\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label\",\n          htmlFor: \"remembercardcheck\",\n          children: \"Remember Card?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 33\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [user.loggedin ? usersavedcard : null, /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"mb-4\",\n          children: \"Payment Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-12 form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"cc-name\",\n              children: \"Name On Card:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"cc-name\",\n              name: \"name\",\n              className: \"form-control\",\n              placeholder: \"Name on Card\",\n              onChange: this.handleChange,\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-12 form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"card\",\n              children: \"Card Information:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardElement, {\n              id: \"card\",\n              className: \"form-control\",\n              style: style\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), remembercardcheck, /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-success btn-large\",\n          children: this.props.operation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n\n  renderSuccess() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"mb-4 text-success\",\n        children: \"Request Successfull....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-success btn-large\",\n        onClick: () => {\n          this.props.toggle();\n        },\n        children: \"Ok\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  }\n\n  renderFailure() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"mb-4 text-danger\",\n        children: \" Error occured while processing credit card... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), this.renderCreditCardInformation()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this);\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    let id = \"\";\n\n    if (!this.state.useExisting) {\n      let {\n        token\n      } = await this.props.stripe.createToken({\n        name: this.state.name\n      });\n\n      if (token == null) {\n        console.log(\"invalid token\");\n        this.setState({\n          status: FAILEDSTATE\n        });\n        return;\n      }\n\n      id = token.id;\n    }\n\n    let response = await fetch(\"/users/charge\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        token: id,\n        customer_id: this.props.user,\n        product_id: this.props.productid,\n        sell_price: this.props.price,\n        rememberCard: this.state.remember !== undefined,\n        useExisting: this.state.useExisting\n      })\n    }); // let response = await this.sendChargeRequest(token,false);\n\n    if (response.ok) {\n      console.log(\"Purchase Complete!\");\n      this.setState({\n        status: SUCCESSSTATE\n      });\n    } else {\n      this.setState({\n        status: FAILEDSTATE\n      });\n    }\n  }\n\n  handleChange(event) {\n    event.preventDefault();\n    const name = event.target.name;\n    const value = event.target.value;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    let body = null;\n\n    switch (this.state.status) {\n      case SUCCESSSTATE:\n        body = this.renderSuccess();\n        break;\n\n      case FAILEDSTATE:\n        body = this.renderFailure();\n        break;\n\n      default:\n        body = this.renderCreditCardInformation();\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default function CreditCardInformation(props) {\n  if (!props.show) {\n    return null;\n  }\n\n  const CCFormWithStripe = injectStripe(CreditCardForm);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [props.separator ? /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 32\n    }, this) : null, /*#__PURE__*/_jsxDEV(StripeProvider, {\n      apiKey: \"pk_test_TYooMQauvdEDq54NiTphI7jx\",\n      children: /*#__PURE__*/_jsxDEV(Elements, {\n        children: /*#__PURE__*/_jsxDEV(CCFormWithStripe, {\n          user: props.user,\n          operation: props.operation,\n          productid: props.productid,\n          price: props.price,\n          toggle: props.toggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 9\n  }, this);\n}\n_c = CreditCardInformation;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreditCardInformation\");","map":{"version":3,"sources":["C:/Users/ckdqj/OneDrive/문서/Go/Hands-On-Full-Stack-Development-with-Go-master/first-react-tutorial/Frontend/src/CreditCards.js"],"names":["React","injectStripe","StripeProvider","Elements","CardElement","Cookies","INITIALSTATE","SUCCESSSTATE","FAILEDSTATE","CreditCardForm","Component","constructor","props","handleSubmit","bind","handleChange","state","status","useExisting","renderCreditCardInformation","user","getJSON","style","base","usersavedcard","setState","remembercardcheck","loggedin","operation","renderSuccess","toggle","renderFailure","event","preventDefault","id","token","stripe","createToken","name","console","log","response","fetch","method","headers","body","JSON","stringify","customer_id","product_id","productid","sell_price","price","rememberCard","remember","undefined","ok","target","value","render","CreditCardInformation","show","CCFormWithStripe","separator"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { injectStripe, StripeProvider, Elements, CardElement } from 'react-stripe-elements';\nimport Cookies from 'js-cookie';\n\nconst INITIALSTATE = \"INITIAL\", SUCCESSSTATE = \"COMPLETE\", FAILEDSTATE = \"FAILED\";\n\nclass CreditCardForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.state = {\n            status: INITIALSTATE,\n            useExisting: false\n        };\n    }\n\n    renderCreditCardInformation() {\n        const user = Cookies.getJSON('user');\n\n        const style = {\n            base: {\n                'fontSize': '20px',\n                'color': '#495057',\n                'fontFamily': 'apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif'\n            }\n        };\n        const usersavedcard = <div>\n            <div className=\"form-row text-center\">\n                <button type=\"submit\" className=\"btn  btn-outline-success text-center mx-auto\" onClick={()=>this.setState({useExisting:true})}>Use saved card?</button>\n            </div>\n            <hr />\n        </div>\n\n        let remembercardcheck = null;\n        if (user.loggedin === true) {\n            remembercardcheck = <div className=\"form-row form-check text-center\">\n                <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"remembercardcheck\" name='remember' onChange={this.handleChange} />\n                <label className=\"form-check-label\" htmlFor=\"remembercardcheck\">\n                    Remember Card?\n            </label>\n            </div>;\n        }\n        return (\n            <div>\n          \n                <form onSubmit={this.handleSubmit}>\n                {(user.loggedin)?usersavedcard:null}\n                <h5 className=\"mb-4\">Payment Info</h5>\n                    <div className=\"form-row\">\n                        <div className=\"col-lg-12 form-group\">\n                            <label htmlFor=\"cc-name\">Name On Card:</label>\n                            <input id=\"cc-name\" name='name' className=\"form-control\" placeholder='Name on Card' onChange={this.handleChange} type='text' />\n                        </div>\n                    </div>\n                    <div className=\"form-row\">\n                        <div className=\"col-lg-12 form-group\">\n                            <label htmlFor=\"card\">Card Information:</label>\n                            <CardElement id=\"card\" className=\"form-control\" style={style} />\n                        </div>\n                    </div>\n                    {remembercardcheck}\n                    <hr className=\"mb-4\" />\n                    <button type=\"submit\" className=\"btn btn-success btn-large\" >{this.props.operation}</button>\n                </form>\n            </div>\n        );\n    }\n\n    renderSuccess() {\n        return (\n            <div>\n                <h5 className=\"mb-4 text-success\">Request Successfull....</h5>\n                <button type=\"submit\" className=\"btn btn-success btn-large\" onClick={() => { this.props.toggle() }}>Ok</button>\n            </div>\n        );\n    }\n\n    renderFailure() {\n        return (\n            <div>\n                <h5 className=\"mb-4 text-danger\"> Error occured while processing credit card... </h5>\n                {this.renderCreditCardInformation()}\n            </div>\n        );\n    }\n\n    async handleSubmit(event) {\n\n        event.preventDefault();\n        let id = \"\";\n        if (!this.state.useExisting) {\n            let { token } = await this.props.stripe.createToken({ name: this.state.name });\n            if (token == null) {\n                console.log(\"invalid token\");\n                this.setState({ status: FAILEDSTATE });\n                return;\n            }\n            id = token.id;\n        }\n\n        let response = await fetch(\"/users/charge\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n                token: id,\n                customer_id: this.props.user,\n                product_id: this.props.productid,\n                sell_price: this.props.price,\n                rememberCard: this.state.remember !== undefined,\n                useExisting: this.state.useExisting\n            })\n        });\n\n        // let response = await this.sendChargeRequest(token,false);\n        if (response.ok) {\n            console.log(\"Purchase Complete!\");\n            this.setState({ status: SUCCESSSTATE });\n        } else {\n            this.setState({ status: FAILEDSTATE });\n        }\n    }\n\n    handleChange(event) {\n        event.preventDefault();\n        const name = event.target.name;\n        const value = event.target.value;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    render() {\n\n        let body = null;\n        switch (this.state.status) {\n            case SUCCESSSTATE:\n                body = this.renderSuccess();\n                break;\n            case FAILEDSTATE:\n                body = this.renderFailure();\n                break;\n            default:\n                body = this.renderCreditCardInformation();\n        }\n\n        return (\n            <div>\n                {body}\n            </div>\n        );\n    }\n}\n\nexport default function CreditCardInformation(props) {\n    if (!props.show) {\n        return null;\n    }\n    const CCFormWithStripe = injectStripe(CreditCardForm);\n    return (\n        <div>\n            {props.separator ? <hr /> : null}\n            <StripeProvider apiKey=\"pk_test_TYooMQauvdEDq54NiTphI7jx\">\n                <Elements>\n                    <CCFormWithStripe user={props.user} operation={props.operation} productid={props.productid} price={props.price} toggle={props.toggle} />\n                </Elements>\n            </StripeProvider>\n        </div>\n    );\n}\n\n"]},"metadata":{},"sourceType":"module"}